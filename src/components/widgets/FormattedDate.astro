---
import { themeConfig } from '@/config';
import type { FormattedDateProps } from '@/types';

const { date, context = 'default' } = Astro.props as FormattedDateProps & { context?: 'list' | 'post' | 'default' };

// Parse date as YYYY-MM-DD (frontmatter format, always uses dashes)
function parseDate(input: string | Date): Date {
  if (input instanceof Date) return input;
  if (typeof input !== 'string') return new Date();

  // Always split on '-' regardless of config
  const [year, month, day] = input.split('-');
  return new Date(Date.UTC(Number(year), Number(month) - 1, Number(day), 12, 0, 0));
}

// Normalize incoming prop to a Date
const parsed = typeof date === 'string' ? parseDate(date) : (date instanceof Date ? date : new Date());

// For the <time> attribute, output a date-only ISO string
const datetimeAttr = parsed.toISOString().split('T')[0];

// Display based on configured format and separator
const sep = themeConfig.date.dateSeparator || '-'; // Use config separator (e.g., '.')
const format = themeConfig.date.dateFormat;
const y = parsed.getUTCFullYear();
const m = String(parsed.getUTCMonth() + 1).padStart(2, '0');
const d = String(parsed.getUTCDate()).padStart(2, '0');
let display = '';
if (format === 'YYYY-MM-DD' || format === 'YYYY.MM.DD') {
  display = `${y}${sep}${m}${sep}${d}`;
} else if (format === 'MM-DD-YYYY' || format === 'MM.DD.YYYY') {
  display = `${m}${sep}${d}${sep}${y}`;
} else if (format === 'DD-MM-YYYY' || format === 'DD.MM.YYYY') {
  display = `${d}${sep}${m}${sep}${y}`;
} else if (format === 'MONTH DAY YYYY') {
  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  display = `${months[parsed.getUTCMonth()]} ${d} ${y}`;
} else if (format === 'DAY MONTH YYYY') {
  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  display = `${d} ${months[parsed.getUTCMonth()]} ${y}`;
}

---
<time
  datetime={datetimeAttr}
  class={!themeConfig.date.dateOnRight &&
    (format === 'MONTH DAY YYYY' || format === 'DAY MONTH YYYY') &&
    context === 'list'
      ? 'date-left'
      : ''}
>
  {display}
</time>

<style>
  .date-left {
    display: inline-block;
    min-width: 86px;
    text-align: right;
  }
</style>