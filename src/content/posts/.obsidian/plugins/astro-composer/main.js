/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var C=Object.getOwnPropertyNames;var v=Object.prototype.hasOwnProperty;var P=(g,p)=>{for(var t in p)w(g,t,{get:p[t],enumerable:!0})},A=(g,p,t,e)=>{if(p&&typeof p=="object"||typeof p=="function")for(let n of C(p))!v.call(g,n)&&n!==t&&w(g,n,{get:()=>p[n],enumerable:!(e=y(p,n))||e.enumerable});return g};var T=g=>A(w({},"__esModule",{value:!0}),g);var D={};P(D,{default:()=>F});module.exports=T(D);var i=require("obsidian"),$={enableUnderscorePrefix:!1,defaultTemplate:`---
title: "{{title}}"
date: {{date}}
description: ""
tags: []
---

`,linkBasePath:"/blog/",postsFolder:"posts",enableAutoRename:!0,enableAutoInsertFrontmatter:!0,creationMode:"file",indexFileName:"index",dateFormat:"YYYY-MM-DD"},F=class extends i.Plugin{async onload(){await this.loadSettings();let t=!0;setTimeout(()=>{t=!1},2e3),this.registerEvent(this.app.vault.on("create",e=>{e instanceof i.TFile&&e.extension==="md"&&!t&&this.settings.enableAutoRename&&setTimeout(async()=>{(await this.app.vault.read(e)).trim().length===0&&(this.settings.enableAutoRename||this.settings.postsFolder&&e.path.startsWith(this.settings.postsFolder))&&new b(this.app,e,this).open()},300)})),this.addCommand({id:"standardize-frontmatter",name:"Standardize Frontmatter",editorCallback:(e,n)=>{this.standardizeFrontmatter(n.file)}}),this.addCommand({id:"convert-wikilinks-astro",name:"Convert internal links for Astro",editorCallback:(e,n)=>{this.convertWikilinksForAstro(e,n.file)}}),this.addSettingTab(new x(this.app,this))}toKebabCase(t){return t.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}async createPostFile(t,e){if(!e)return new i.Notice("Title is required to create a post."),null;let n=this.toKebabCase(e),l=this.settings.enableUnderscorePrefix?"_":"",r=this.settings.postsFolder||"";if(r&&(this.app.vault.getAbstractFileByPath(r)||await this.app.vault.createFolder(r)),this.settings.creationMode==="folder"){let s=`${l}${n}`,h=r?`${r}/${s}`:s;try{await this.app.vault.createFolder(h)}catch(d){}let a=`${this.settings.indexFileName}.md`,o=`${h}/${a}`;if(this.app.vault.getAbstractFileByPath(o))return new i.Notice(`File already exists at ${o}`),null;try{await this.app.vault.rename(t,o);let d=this.app.vault.getAbstractFileByPath(o);return setTimeout(()=>{let u=this.app.workspace.getLeavesOfType("file-explorer")[0];if(u&&u.view){let f=u.view.tree;f&&f.revealFile(d)}},200),await this.app.workspace.getLeaf(!1).openFile(d),this.settings.enableAutoInsertFrontmatter&&await this.addFrontmatterToFile(d,e),d}catch(d){return new i.Notice(`Failed to create folder structure: ${d.message}`),null}}else{let s=`${l}${n}.md`,h=r?`${r}/${s}`:s,a=this.app.vault.getAbstractFileByPath(h);if(a&&a!==t)return new i.Notice(`File with name "${s}" already exists`),null;try{await this.app.vault.rename(t,h);let o=this.app.vault.getAbstractFileByPath(h);return await this.app.workspace.getLeaf(!1).openFile(o),this.settings.enableAutoInsertFrontmatter&&await this.addFrontmatterToFile(o,e),o}catch(o){return new i.Notice(`Failed to rename file: ${o.message}`),null}}}async addFrontmatterToFile(t,e,n){let l=new Date,r=window.moment(l).format(this.settings.dateFormat),s=this.settings.defaultTemplate;s=s.replace(/\{\{title\}\}/g,e),s=s.replace(/\{\{date\}\}/g,r),s.endsWith(`

`)||(s=s.replace(/\n*$/,`

`)),await this.app.vault.modify(t,s)}async standardizeFrontmatter(t){if(!t){new i.Notice("No active file");return}let e=await this.app.vault.read(t),n=t.basename.replace(/^_/,""),l=0,r={};if(e.startsWith("---")){let o=e.indexOf(`
---`,3);if(o!==-1){l=o+4;let c=e.slice(4,o);try{c.split(`
`).forEach(d=>{let m=d.match(/^(\w+):\s*(.+)$/);if(m){let[,u,f]=m;r[u]=f.replace(/^["'\[\]]|["'\[\]]$/g,"")}})}catch(d){new i.Notice("Failed to parse existing frontmatter")}}}let s=this.settings.enableAutoInsertFrontmatter?this.settings.defaultTemplate:"";this.settings.enableAutoInsertFrontmatter&&(s=s.replace(/\{\{title\}\}/g,r.title||n),s=s.replace(/\{\{date\}\}/g,r.date||window.moment(new Date).format(this.settings.dateFormat)),s.endsWith(`

`)||(s=s.replace(/\n*$/,`

`)));let h=e.slice(l),a=s+(s.endsWith(`
`)?"":`
`)+h;await this.app.vault.modify(t,a),new i.Notice("Frontmatter standardized using template"+(this.settings.enableAutoInsertFrontmatter?"":" (no insertion)"))}async convertWikilinksForAstro(t,e){if(!e){new i.Notice("No active file");return}let l=t.getValue();l=l.replace(/(?<!\!)\[\[([^\]|]+)(\|([^\]]+))?\]\]/g,(r,s,h,a)=>{let o=a||s,c=this.settings.linkBasePath;c.startsWith("/")||(c="/"+c),c.endsWith("/")||(c=c+"/");let d=this.settings.postsFolder?`${this.settings.postsFolder}/`:"",m=this.settings.indexFileName||"index";if(d&&s.startsWith(d)&&s.endsWith(`/${m}`)){let u=s.slice(d.length,-(m.length+1));return`[${o}](${c}${u}/)`}else{let u=this.toKebabCase(s);return`[${o}](${c}${u}/)`}}),l=l.replace(/(?<!\!)\[(.*?)\]\(([^)]+\.md)\)/g,(r,s,h)=>{let a=this.settings.linkBasePath;a.startsWith("/")||(a="/"+a),a.endsWith("/")||(a=a+"/");let o=h.replace(/^\.\.?\//,"").replace(/\.md$/,"").replace(/^\/|\/$/,""),c=this.settings.indexFileName||"index";if(o.endsWith(`/${c}`)){let d=o.slice(0,-(c.length+1));return`[${s}](${a}${d}/)`}else{let d=this.toKebabCase(o);return`[${s}](${a}${d}/)`}}),l=l.replace(/\{\{([^}]+)\}\}/g,(r,s)=>{let h=this.toKebabCase(s.replace(".md","")),a=this.settings.linkBasePath;return a.startsWith("/")||(a="/"+a),a.endsWith("/")||(a=a+"/"),`[Embedded: ${s}](${a}${h}/)`}),t.setValue(l),new i.Notice("All internal links converted for Astro")}async loadSettings(){this.settings=Object.assign({},$,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},b=class extends i.Modal{constructor(t,e,n){super(t);this.file=e,this.plugin=n}onOpen(){let{contentEl:t}=this;t.empty(),t.createEl("h2",{text:"New Blog Post"}),t.createEl("p",{text:"Enter a title for your blog post:"}),this.titleInput=t.createEl("input",{type:"text",placeholder:"My Awesome Blog Post"}),this.titleInput.style.width="100%",this.titleInput.style.marginBottom="16px",this.titleInput.focus();let e=t.createDiv();e.style.display="flex",e.style.gap="8px",e.style.justifyContent="flex-end";let n=e.createEl("button",{text:"Cancel"});n.onclick=()=>this.close();let l=e.createEl("button",{text:"Create"});l.classList.add("mod-cta"),l.onclick=()=>this.createPost(),this.titleInput.addEventListener("keypress",r=>{r.key==="Enter"&&this.createPost()})}async createPost(){let t=this.titleInput.value.trim();if(!t){new i.Notice("Please enter a title");return}try{let e=await this.plugin.createPostFile(this.file,t);e&&await this.plugin.addFrontmatterToFile(e,t)}catch(e){new i.Notice(`Error creating post: ${e.message}`)}this.close()}onClose(){let{contentEl:t}=this;t.empty()}},x=class extends i.PluginSettingTab{constructor(t,e){super(t,e);this.autoRenameContainer=null;this.postsFolderContainer=null;this.underscorePrefixContainer=null;this.creationModeContainer=null;this.indexFileContainer=null;this.plugin=e}display(){let{containerEl:t}=this;t.empty(),new i.Setting(t).setName("Auto-rename files").setDesc("Automatically show title dialog for new .md files, rename them based on the title, and insert frontmatter if enabled.").addToggle(e=>e.setValue(this.plugin.settings.enableAutoRename).onChange(async n=>{this.plugin.settings.enableAutoRename=n,await this.plugin.saveSettings(),this.updateConditionalFields()})),new i.Setting(t).setName("Auto-insert frontmatter").setDesc("Automatically insert the frontmatter template when creating new files or standardizing existing ones.").addToggle(e=>e.setValue(this.plugin.settings.enableAutoInsertFrontmatter).onChange(async n=>{this.plugin.settings.enableAutoInsertFrontmatter=n,await this.plugin.saveSettings()})),this.autoRenameContainer=t.createDiv({cls:"auto-rename-fields"}),this.autoRenameContainer.style.display=this.plugin.settings.enableAutoRename?"block":"none",this.postsFolderContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.postsFolderContainer).setName("Posts folder").setDesc("Folder name for blog posts (leave blank to use the root folder).").addText(e=>e.setPlaceholder("posts").setValue(this.plugin.settings.postsFolder).onChange(async n=>{this.plugin.settings.postsFolder=n,await this.plugin.saveSettings()})),this.underscorePrefixContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.underscorePrefixContainer).setName("Use underscore prefix for drafts").setDesc("Add an underscore prefix (_post-title) to new notes by default when enabled. This hides them from Astro, which can be helpful for post drafts. Disable to skip prefixing.").addToggle(e=>e.setValue(this.plugin.settings.enableUnderscorePrefix).onChange(async n=>{this.plugin.settings.enableUnderscorePrefix=n,await this.plugin.saveSettings()})),this.creationModeContainer=this.autoRenameContainer.createDiv(),new i.Setting(this.creationModeContainer).setName("Creation mode").setDesc("How to create new posts: file-based or folder-based with index.md.").addDropdown(e=>e.addOption("file","File-based (post-title.md)").addOption("folder","Folder-based (post-title/index.md)").setValue(this.plugin.settings.creationMode).onChange(async n=>{this.plugin.settings.creationMode=n,await this.plugin.saveSettings(),this.updateIndexFileField()})),this.indexFileContainer=this.autoRenameContainer.createDiv({cls:"index-file-field"}),this.indexFileContainer.style.display=this.plugin.settings.creationMode==="folder"?"block":"none",new i.Setting(this.indexFileContainer).setName("Index file name").setDesc("Name for the main file in folder-based mode (without .md extension).").addText(e=>e.setPlaceholder("index").setValue(this.plugin.settings.indexFileName).onChange(async n=>{this.plugin.settings.indexFileName=n||"index",await this.plugin.saveSettings()})),new i.Setting(t).setName("Link base path").setDesc("Base path for converted links (e.g., /blog/, leave blank for root domain).").addText(e=>e.setPlaceholder("/blog/").setValue(this.plugin.settings.linkBasePath).onChange(async n=>{this.plugin.settings.linkBasePath=n,await this.plugin.saveSettings()})),new i.Setting(t).setName("Date format").setDesc("Format for the date in frontmatter (e.g., YYYY-MM-DD, MMMM D, YYYY, YYYY-MM-DD hh:mm a).").addText(e=>e.setPlaceholder("YYYY-MM-DD").setValue(this.plugin.settings.dateFormat).onChange(async n=>{this.plugin.settings.dateFormat=n||"YYYY-MM-DD",await this.plugin.saveSettings()})),new i.Setting(t).setName("Frontmatter Template").setDesc("Used for new posts and when standardizing frontmatter.").addTextArea(e=>{let n=this.plugin;e.setPlaceholder(`---
title: "{{title}}"
date: {{date}}
description: ""
tags: []
---
`).setValue(n.settings.defaultTemplate).onChange(async l=>{n.settings.defaultTemplate=l,await n.saveSettings()}),e.inputEl.style.height="200px",e.inputEl.style.width="100%"}),this.updateConditionalFields(),this.updateIndexFileField()}updateConditionalFields(){this.autoRenameContainer&&(this.autoRenameContainer.style.display=this.plugin.settings.enableAutoRename?"block":"none")}updateIndexFileField(){this.indexFileContainer&&(this.indexFileContainer.style.display=this.plugin.settings.creationMode==="folder"?"block":"none")}};
