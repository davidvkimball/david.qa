/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var w=Object.defineProperty;var T=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var S=Object.prototype.hasOwnProperty;var k=(g,p)=>{for(var e in p)w(g,e,{get:p[e],enumerable:!0})},A=(g,p,e,t)=>{if(p&&typeof p=="object"||typeof p=="function")for(let s of $(p))!S.call(g,s)&&s!==e&&w(g,s,{get:()=>p[s],enumerable:!(t=T(p,s))||t.enumerable});return g};var C=g=>A(w({},"__esModule",{value:!0}),g);var N={};k(N,{default:()=>F});module.exports=C(N);var i=require("obsidian"),E={draftStyle:"frontmatter",defaultTemplate:`---
title: "{{title}}"
date: "{{date}}"
description: ""
tags: []
draft: true
---

`,linkBasePath:"/blog/",postsFolder:"posts",enableAutoRename:!0,creationMode:"file",indexFileName:"index"},F=class extends i.Plugin{async onload(){await this.loadSettings();let e=!0;setTimeout(()=>{e=!1},2e3),this.registerEvent(this.app.vault.on("create",t=>{t instanceof i.TFile&&t.extension==="md"&&!e&&setTimeout(async()=>{if((await this.app.vault.read(t)).trim().length===0&&(this.settings.enableAutoRename||this.settings.postsFolder&&t.path.startsWith(this.settings.postsFolder))){t.name==="Untitled.md"&&t.path.startsWith(this.settings.postsFolder)||await this.moveToPostsFolder(t);let r=this.settings.postsFolder?`${this.settings.postsFolder}/Untitled.md`:"Untitled.md",a=this.app.vault.getAbstractFileByPath(r);a&&new y(this.app,a,this).open()}},150)})),this.addCommand({id:"standardize-frontmatter",name:"Standardize Frontmatter",editorCallback:(t,s)=>{this.standardizeFrontmatter(s.file)}}),this.addCommand({id:"convert-wikilinks-astro",name:"Convert Wikilinks for Astro",editorCallback:(t,s)=>{this.convertWikilinksForAstro(t,s.file)}}),this.addSettingTab(new v(this.app,this))}toKebabCase(e){return e.toLowerCase().replace(/[^a-z0-9\s-]/g,"").trim().replace(/\s+/g,"-").replace(/-+/g,"-").replace(/^-|-$/g,"")}async moveToPostsFolder(e){if(!this.settings.postsFolder)return e;let t=`${this.settings.postsFolder}/Untitled.md`,s=this.app.vault.getAbstractFileByPath(t);if(s)return s;try{return this.app.vault.getAbstractFileByPath(this.settings.postsFolder)||await this.app.vault.createFolder(this.settings.postsFolder),await this.app.vault.rename(e,t),this.app.vault.getAbstractFileByPath(t)}catch(n){return new i.Notice(`Failed to move file to posts folder: ${n.message}`),e}}async createPostFile(e,t){let s=this.toKebabCase(t),n=this.settings.draftStyle==="filename";if(this.settings.creationMode==="folder"){let a=`${n?"_":""}${s}`,c=this.settings.postsFolder?`${this.settings.postsFolder}/${a}`:a;try{await this.app.vault.createFolder(c)}catch(d){}let l=`${this.settings.indexFileName}.md`,h=`${c}/${l}`;if(this.app.vault.getAbstractFileByPath(h))return new i.Notice(`File already exists at ${h}`),null;try{await this.app.vault.delete(e);let d=await this.app.vault.create(h,"");return setTimeout(()=>{let u=this.app.workspace.getLeavesOfType("file-explorer")[0];if(u&&u.view){let f=u.view.tree;f&&f.revealFile(d)}},200),await this.app.workspace.getLeaf(!1).openFile(d),d}catch(d){return new i.Notice(`Failed to create folder structure: ${d.message}`),null}}else{let a=`${n?"_":""}${s}.md`,c=this.settings.postsFolder||"",l=c?`${c}/${a}`:a,h=this.app.vault.getAbstractFileByPath(l);if(h&&h!==e)return new i.Notice(`File with name "${a}" already exists`),null;try{await this.app.vault.rename(e,l);let o=this.app.vault.getAbstractFileByPath(l);return await this.app.workspace.getLeaf(!1).openFile(o),o}catch(o){return new i.Notice(`Failed to rename file: ${o.message}`),null}}}async addFrontmatterToFile(e,t,s){let n=new Date,r=n.getFullYear()+"-"+String(n.getMonth()+1).padStart(2,"0")+"-"+String(n.getDate()).padStart(2,"0"),a=this.settings.defaultTemplate;a=a.replace(/\{\{title\}\}/g,t),a=a.replace(/\{\{date\}\}/g,r),a.endsWith(`

`)||(a=a.replace(/\n*$/,`

`)),await this.app.vault.modify(e,a)}async standardizeFrontmatter(e){if(!e){new i.Notice("No active file");return}let t=await this.app.vault.read(e),s=e.basename.replace(/^_/,""),n=0,r={};if(t.startsWith("---")){let m=t.indexOf(`
---`,3);if(m!==-1){n=m+4;let u=t.slice(4,m);try{u.split(`
`).forEach(f=>{let b=f.match(/^(\w+):\s*(.+)$/);if(b){let[,x,P]=b;r[x]=P.replace(/^["'\[\]]|["'\[\]]$/g,"")}})}catch(f){new i.Notice("Failed to parse existing frontmatter")}}}let a=this.settings.defaultTemplate;a=a.replace(/\{\{title\}\}/g,r.title||s);let c=new Date,l=c.getFullYear()+"-"+String(c.getMonth()+1).padStart(2,"0")+"-"+String(c.getDate()).padStart(2,"0");a=a.replace(/\{\{date\}\}/g,r.date||l);let h=this.settings.draftStyle==="frontmatter"?"true":"false";a=a.replace(/draft:\s*true/g,`draft: ${r.draft||h}`);let o=t.slice(n),d=a+(a.endsWith(`
`)?"":`
`)+o;await this.app.vault.modify(e,d),new i.Notice("Frontmatter standardized using template")}async convertWikilinksForAstro(e,t){if(!t){new i.Notice("No active file");return}let n=e.getValue();n=n.replace(/(?<!\!)\[\[([^\]|]+)(\|([^\]]+))?\]\]/g,(r,a,c,l)=>{let h=l||a,o=this.settings.linkBasePath;o.startsWith("/")||(o="/"+o),o.endsWith("/")||(o=o+"/");let d=this.settings.postsFolder?`${this.settings.postsFolder}/`:"",m=this.settings.indexFileName||"index";if(d&&a.startsWith(d)&&a.endsWith(`/${m}`)){let u=a.slice(d.length,-(m.length+1));return`[${h}](${o}${u}/)`}else{let u=this.toKebabCase(a);return`[${h}](${o}${u}/)`}}),n=n.replace(/\{\{([^}]+)\}\}/g,(r,a)=>{let c=this.toKebabCase(a.replace(".md","")),l=this.settings.linkBasePath;return l.startsWith("/")||(l="/"+l),l.endsWith("/")||(l=l+"/"),`[Embedded: ${a}](${l}${c}/)`}),e.setValue(n),new i.Notice("Wikilinks converted for Astro")}async loadSettings(){this.settings=Object.assign({},E,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}},y=class extends i.Modal{constructor(e,t,s){super(e);this.file=t,this.plugin=s}onOpen(){let{contentEl:e}=this;e.empty(),e.createEl("h2",{text:"New Blog Post"}),e.createEl("p",{text:"Enter a title for your blog post:"}),this.titleInput=e.createEl("input",{type:"text",placeholder:"My Awesome Blog Post"}),this.titleInput.style.width="100%",this.titleInput.style.marginBottom="16px",this.titleInput.focus();let t=e.createDiv();t.style.display="flex",t.style.gap="8px",t.style.justifyContent="flex-end";let s=t.createEl("button",{text:"Cancel"});s.onclick=()=>this.close();let n=t.createEl("button",{text:"Create"});n.classList.add("mod-cta"),n.onclick=()=>this.createPost(),this.titleInput.addEventListener("keypress",r=>{r.key==="Enter"&&this.createPost()})}async createPost(){let e=this.titleInput.value.trim();if(!e){new i.Notice("Please enter a title");return}try{let t=await this.plugin.createPostFile(this.file,e);t&&await this.plugin.addFrontmatterToFile(t,e)}catch(t){new i.Notice(`Error creating post: ${t.message}`)}this.close()}onClose(){let{contentEl:e}=this;e.empty()}},v=class extends i.PluginSettingTab{constructor(e,t){super(e,t);this.plugin=t}display(){let{containerEl:e}=this;e.empty(),new i.Setting(e).setName("Draft Style").setDesc("How to mark posts as drafts.").addDropdown(t=>t.addOption("frontmatter","Frontmatter (draft: true)").addOption("filename","Filename prefix (_post-name.md)").setValue(this.plugin.settings.draftStyle).onChange(async s=>{this.plugin.settings.draftStyle=s,await this.plugin.saveSettings()})),new i.Setting(e).setName("Posts Folder").setDesc("Folder name for blog posts (leave blank to use the root folder).").addText(t=>t.setPlaceholder("posts").setValue(this.plugin.settings.postsFolder).onChange(async s=>{this.plugin.settings.postsFolder=s,await this.plugin.saveSettings()})),new i.Setting(e).setName("Link Base Path").setDesc("Base path for converted links (leave blank to use the root domain).").addText(t=>t.setPlaceholder("/blog/").setValue(this.plugin.settings.linkBasePath).onChange(async s=>{this.plugin.settings.linkBasePath=s,await this.plugin.saveSettings()})),new i.Setting(e).setName("Auto-rename Files").setDesc("Automatically show title dialog for new .md files.").addToggle(t=>t.setValue(this.plugin.settings.enableAutoRename).onChange(async s=>{this.plugin.settings.enableAutoRename=s,await this.plugin.saveSettings()})),new i.Setting(e).setName("Creation Mode").setDesc("How to create new posts: file-based or folder-based with index.md.").addDropdown(t=>t.addOption("file","File-based (post-title.md)").addOption("folder","Folder-based (post-title/index.md)").setValue(this.plugin.settings.creationMode).onChange(async s=>{this.plugin.settings.creationMode=s,await this.plugin.saveSettings()})),new i.Setting(e).setName("Index File Name").setDesc("Name for the main file in folder-based mode (without .md extension).").addText(t=>t.setPlaceholder("index").setValue(this.plugin.settings.indexFileName).onChange(async s=>{this.plugin.settings.indexFileName=s||"index",await this.plugin.saveSettings()})),new i.Setting(e).setName("Default Frontmatter Template").setDesc("Template for new post frontmatter (use {{title}}, {{date}}).").addTextArea(t=>{t.setPlaceholder(`---
title: "{{title}}"
date: "{{date}}"
description: ""
tags: []
draft: true
---
`).setValue(this.plugin.settings.defaultTemplate).onChange(async s=>{this.plugin.settings.defaultTemplate=s,await this.plugin.saveSettings()}),t.inputEl.style.height="200px",t.inputEl.style.width="100%"})}};
